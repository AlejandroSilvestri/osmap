// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmap.proto

#include "osmap.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_osmap_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SerializedDescriptor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SerializedK;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SerializedKeypoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SerializedPose;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SerializedPosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SerializedKeyframeFeatures;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SerializedFeature;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SerializedKeyframe;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_osmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SerializedMappoint;
}  // namespace protobuf_osmap_2eproto
class SerializedDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedDescriptor>
      _instance;
} _SerializedDescriptor_default_instance_;
class SerializedPoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedPose>
      _instance;
} _SerializedPose_default_instance_;
class SerializedPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedPosition>
      _instance;
} _SerializedPosition_default_instance_;
class SerializedKeypointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedKeypoint>
      _instance;
} _SerializedKeypoint_default_instance_;
class SerializedKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedK>
      _instance;
} _SerializedK_default_instance_;
class SerializedKArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedKArray>
      _instance;
} _SerializedKArray_default_instance_;
class SerializedMappointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedMappoint>
      _instance;
} _SerializedMappoint_default_instance_;
class SerializedMappointArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedMappointArray>
      _instance;
} _SerializedMappointArray_default_instance_;
class SerializedKeyframeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedKeyframe>
      _instance;
} _SerializedKeyframe_default_instance_;
class SerializedKeyframeArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedKeyframeArray>
      _instance;
} _SerializedKeyframeArray_default_instance_;
class SerializedFeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedFeature>
      _instance;
} _SerializedFeature_default_instance_;
class SerializedKeyframeFeaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedKeyframeFeatures>
      _instance;
} _SerializedKeyframeFeatures_default_instance_;
class SerializedKeyframeFeaturesArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SerializedKeyframeFeaturesArray>
      _instance;
} _SerializedKeyframeFeaturesArray_default_instance_;
namespace protobuf_osmap_2eproto {
static void InitDefaultsSerializedDescriptor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedDescriptor_default_instance_;
    new (ptr) ::SerializedDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedDescriptor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedDescriptor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedDescriptor}, {}};

static void InitDefaultsSerializedPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedPose_default_instance_;
    new (ptr) ::SerializedPose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedPose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedPose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedPose}, {}};

static void InitDefaultsSerializedPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedPosition_default_instance_;
    new (ptr) ::SerializedPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedPosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedPosition}, {}};

static void InitDefaultsSerializedKeypoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedKeypoint_default_instance_;
    new (ptr) ::SerializedKeypoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedKeypoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedKeypoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedKeypoint}, {}};

static void InitDefaultsSerializedK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedK_default_instance_;
    new (ptr) ::SerializedK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SerializedK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSerializedK}, {}};

static void InitDefaultsSerializedKArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedKArray_default_instance_;
    new (ptr) ::SerializedKArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedKArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SerializedKArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSerializedKArray}, {
      &protobuf_osmap_2eproto::scc_info_SerializedK.base,}};

static void InitDefaultsSerializedMappoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedMappoint_default_instance_;
    new (ptr) ::SerializedMappoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedMappoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SerializedMappoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSerializedMappoint}, {
      &protobuf_osmap_2eproto::scc_info_SerializedPosition.base,
      &protobuf_osmap_2eproto::scc_info_SerializedDescriptor.base,}};

static void InitDefaultsSerializedMappointArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedMappointArray_default_instance_;
    new (ptr) ::SerializedMappointArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedMappointArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SerializedMappointArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSerializedMappointArray}, {
      &protobuf_osmap_2eproto::scc_info_SerializedMappoint.base,}};

static void InitDefaultsSerializedKeyframe() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedKeyframe_default_instance_;
    new (ptr) ::SerializedKeyframe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedKeyframe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SerializedKeyframe =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSerializedKeyframe}, {
      &protobuf_osmap_2eproto::scc_info_SerializedPose.base,
      &protobuf_osmap_2eproto::scc_info_SerializedK.base,}};

static void InitDefaultsSerializedKeyframeArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedKeyframeArray_default_instance_;
    new (ptr) ::SerializedKeyframeArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedKeyframeArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SerializedKeyframeArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSerializedKeyframeArray}, {
      &protobuf_osmap_2eproto::scc_info_SerializedKeyframe.base,}};

static void InitDefaultsSerializedFeature() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedFeature_default_instance_;
    new (ptr) ::SerializedFeature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedFeature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SerializedFeature =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSerializedFeature}, {
      &protobuf_osmap_2eproto::scc_info_SerializedKeypoint.base,
      &protobuf_osmap_2eproto::scc_info_SerializedDescriptor.base,}};

static void InitDefaultsSerializedKeyframeFeatures() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedKeyframeFeatures_default_instance_;
    new (ptr) ::SerializedKeyframeFeatures();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedKeyframeFeatures::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SerializedKeyframeFeatures =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSerializedKeyframeFeatures}, {
      &protobuf_osmap_2eproto::scc_info_SerializedFeature.base,}};

static void InitDefaultsSerializedKeyframeFeaturesArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SerializedKeyframeFeaturesArray_default_instance_;
    new (ptr) ::SerializedKeyframeFeaturesArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SerializedKeyframeFeaturesArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SerializedKeyframeFeaturesArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSerializedKeyframeFeaturesArray}, {
      &protobuf_osmap_2eproto::scc_info_SerializedKeyframeFeatures.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedDescriptor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedPose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedPosition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedKeypoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedKArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedMappoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedMappointArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedKeyframe.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedKeyframeArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedFeature.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedKeyframeFeatures.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SerializedKeyframeFeaturesArray.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedDescriptor, block_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedPose, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedPosition, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedPosition, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeypoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeypoint, ptx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeypoint, pty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeypoint, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeypoint, octave_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedK, fx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedK, fy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedK, cx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedK, cy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKArray, k_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappoint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappoint, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappoint, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappoint, found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappoint, briefdescriptor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappointArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedMappointArray, mappoint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, kmatrix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, kindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, loopedgesids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframe, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeArray, keyframe_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedFeature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedFeature, mappoint_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedFeature, keypoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedFeature, briefdescriptor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeFeatures, keyframe_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeFeatures, feature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeFeaturesArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SerializedKeyframeFeaturesArray, feature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SerializedDescriptor)},
  { 6, -1, sizeof(::SerializedPose)},
  { 12, -1, sizeof(::SerializedPosition)},
  { 20, -1, sizeof(::SerializedKeypoint)},
  { 29, -1, sizeof(::SerializedK)},
  { 38, -1, sizeof(::SerializedKArray)},
  { 44, -1, sizeof(::SerializedMappoint)},
  { 54, -1, sizeof(::SerializedMappointArray)},
  { 60, -1, sizeof(::SerializedKeyframe)},
  { 71, -1, sizeof(::SerializedKeyframeArray)},
  { 77, -1, sizeof(::SerializedFeature)},
  { 85, -1, sizeof(::SerializedKeyframeFeatures)},
  { 92, -1, sizeof(::SerializedKeyframeFeaturesArray)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedPose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedKeypoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedKArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedMappoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedMappointArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedKeyframe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedKeyframeArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedFeature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedKeyframeFeatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SerializedKeyframeFeaturesArray_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "osmap.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013osmap.proto\"%\n\024SerializedDescriptor\022\r\n"
      "\005block\030\001 \003(\007\"!\n\016SerializedPose\022\017\n\007elemen"
      "t\030\001 \003(\002\"5\n\022SerializedPosition\022\t\n\001x\030\001 \001(\002"
      "\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"M\n\022SerializedKeyp"
      "oint\022\013\n\003ptx\030\001 \001(\002\022\013\n\003pty\030\002 \001(\002\022\r\n\005angle\030"
      "\003 \001(\002\022\016\n\006octave\030\004 \001(\002\"=\n\013SerializedK\022\n\n\002"
      "fx\030\001 \001(\002\022\n\n\002fy\030\002 \001(\002\022\n\n\002cx\030\003 \001(\002\022\n\n\002cy\030\004"
      " \001(\002\"+\n\020SerializedKArray\022\027\n\001k\030\001 \003(\0132\014.Se"
      "rializedK\"\227\001\n\022SerializedMappoint\022\n\n\002id\030\001"
      " \001(\r\022%\n\010position\030\002 \001(\0132\023.SerializedPosit"
      "ion\022\017\n\007visible\030\003 \001(\002\022\r\n\005found\030\004 \001(\002\022.\n\017b"
      "riefdescriptor\030\005 \001(\0132\025.SerializedDescrip"
      "tor\"@\n\027SerializedMappointArray\022%\n\010mappoi"
      "nt\030\001 \003(\0132\023.SerializedMappoint\"\227\001\n\022Serial"
      "izedKeyframe\022\n\n\002id\030\001 \001(\r\022\035\n\004pose\030\002 \001(\0132\017"
      ".SerializedPose\022\035\n\007kmatrix\030\003 \001(\0132\014.Seria"
      "lizedK\022\016\n\006kindex\030\004 \001(\r\022\024\n\014loopedgesids\030\005"
      " \003(\r\022\021\n\ttimestamp\030\006 \001(\001\"@\n\027SerializedKey"
      "frameArray\022%\n\010keyframe\030\001 \003(\0132\023.Serialize"
      "dKeyframe\"\177\n\021SerializedFeature\022\023\n\013mappoi"
      "nt_id\030\002 \001(\r\022%\n\010keypoint\030\003 \001(\0132\023.Serializ"
      "edKeypoint\022.\n\017briefdescriptor\030\004 \001(\0132\025.Se"
      "rializedDescriptor\"V\n\032SerializedKeyframe"
      "Features\022\023\n\013keyframe_id\030\001 \001(\r\022#\n\007feature"
      "\030\002 \003(\0132\022.SerializedFeature\"O\n\037Serialized"
      "KeyframeFeaturesArray\022,\n\007feature\030\001 \003(\0132\033"
      ".SerializedKeyframeFeaturesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1075);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osmap.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_osmap_2eproto

// ===================================================================

void SerializedDescriptor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedDescriptor::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedDescriptor::SerializedDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedDescriptor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedDescriptor)
}
SerializedDescriptor::SerializedDescriptor(const SerializedDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      block_(from.block_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SerializedDescriptor)
}

void SerializedDescriptor::SharedCtor() {
}

SerializedDescriptor::~SerializedDescriptor() {
  // @@protoc_insertion_point(destructor:SerializedDescriptor)
  SharedDtor();
}

void SerializedDescriptor::SharedDtor() {
}

void SerializedDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedDescriptor::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedDescriptor& SerializedDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedDescriptor.base);
  return *internal_default_instance();
}


void SerializedDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_block())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 10u, input, this->mutable_block())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedDescriptor)
  return false;
#undef DO_
}

void SerializedDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 block = 1;
  if (this->block_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _block_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->block().data(), this->block_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedDescriptor)
}

::google::protobuf::uint8* SerializedDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 block = 1;
  if (this->block_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _block_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->block_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedDescriptor)
  return target;
}

size_t SerializedDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedDescriptor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated fixed32 block = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->block_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _block_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedDescriptor)
    MergeFrom(*source);
  }
}

void SerializedDescriptor::MergeFrom(const SerializedDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_.MergeFrom(from.block_);
}

void SerializedDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedDescriptor::CopyFrom(const SerializedDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedDescriptor::IsInitialized() const {
  return true;
}

void SerializedDescriptor::Swap(SerializedDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedDescriptor::InternalSwap(SerializedDescriptor* other) {
  using std::swap;
  block_.InternalSwap(&other->block_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedDescriptor::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedPose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedPose::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedPose::SerializedPose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedPose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedPose)
}
SerializedPose::SerializedPose(const SerializedPose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SerializedPose)
}

void SerializedPose::SharedCtor() {
}

SerializedPose::~SerializedPose() {
  // @@protoc_insertion_point(destructor:SerializedPose)
  SharedDtor();
}

void SerializedPose::SharedDtor() {
}

void SerializedPose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedPose::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedPose& SerializedPose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedPose.base);
  return *internal_default_instance();
}


void SerializedPose::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedPose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedPose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_element())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_element())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedPose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedPose)
  return false;
#undef DO_
}

void SerializedPose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float element = 1;
  if (this->element_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _element_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->element().data(), this->element_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedPose)
}

::google::protobuf::uint8* SerializedPose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedPose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float element = 1;
  if (this->element_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _element_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->element_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedPose)
  return target;
}

size_t SerializedPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedPose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _element_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedPose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedPose)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedPose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedPose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedPose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedPose)
    MergeFrom(*source);
  }
}

void SerializedPose::MergeFrom(const SerializedPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void SerializedPose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedPose::CopyFrom(const SerializedPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedPose::IsInitialized() const {
  return true;
}

void SerializedPose::Swap(SerializedPose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedPose::InternalSwap(SerializedPose* other) {
  using std::swap;
  element_.InternalSwap(&other->element_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedPose::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedPosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedPosition::kXFieldNumber;
const int SerializedPosition::kYFieldNumber;
const int SerializedPosition::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedPosition::SerializedPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedPosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedPosition)
}
SerializedPosition::SerializedPosition(const SerializedPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:SerializedPosition)
}

void SerializedPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

SerializedPosition::~SerializedPosition() {
  // @@protoc_insertion_point(destructor:SerializedPosition)
  SharedDtor();
}

void SerializedPosition::SharedDtor() {
}

void SerializedPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedPosition::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedPosition& SerializedPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedPosition.base);
  return *internal_default_instance();
}


void SerializedPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool SerializedPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedPosition)
  return false;
#undef DO_
}

void SerializedPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedPosition)
}

::google::protobuf::uint8* SerializedPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedPosition)
  return target;
}

size_t SerializedPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedPosition)
    MergeFrom(*source);
  }
}

void SerializedPosition::MergeFrom(const SerializedPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void SerializedPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedPosition::CopyFrom(const SerializedPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedPosition::IsInitialized() const {
  return true;
}

void SerializedPosition::Swap(SerializedPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedPosition::InternalSwap(SerializedPosition* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedPosition::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedKeypoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedKeypoint::kPtxFieldNumber;
const int SerializedKeypoint::kPtyFieldNumber;
const int SerializedKeypoint::kAngleFieldNumber;
const int SerializedKeypoint::kOctaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedKeypoint::SerializedKeypoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedKeypoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedKeypoint)
}
SerializedKeypoint::SerializedKeypoint(const SerializedKeypoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ptx_, &from.ptx_,
    static_cast<size_t>(reinterpret_cast<char*>(&octave_) -
    reinterpret_cast<char*>(&ptx_)) + sizeof(octave_));
  // @@protoc_insertion_point(copy_constructor:SerializedKeypoint)
}

void SerializedKeypoint::SharedCtor() {
  ::memset(&ptx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&octave_) -
      reinterpret_cast<char*>(&ptx_)) + sizeof(octave_));
}

SerializedKeypoint::~SerializedKeypoint() {
  // @@protoc_insertion_point(destructor:SerializedKeypoint)
  SharedDtor();
}

void SerializedKeypoint::SharedDtor() {
}

void SerializedKeypoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedKeypoint::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedKeypoint& SerializedKeypoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedKeypoint.base);
  return *internal_default_instance();
}


void SerializedKeypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ptx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&octave_) -
      reinterpret_cast<char*>(&ptx_)) + sizeof(octave_));
  _internal_metadata_.Clear();
}

bool SerializedKeypoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedKeypoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ptx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ptx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float octave = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &octave_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedKeypoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedKeypoint)
  return false;
#undef DO_
}

void SerializedKeypoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedKeypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ptx = 1;
  if (this->ptx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ptx(), output);
  }

  // float pty = 2;
  if (this->pty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pty(), output);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // float octave = 4;
  if (this->octave() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->octave(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedKeypoint)
}

::google::protobuf::uint8* SerializedKeypoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ptx = 1;
  if (this->ptx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ptx(), target);
  }

  // float pty = 2;
  if (this->pty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pty(), target);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // float octave = 4;
  if (this->octave() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->octave(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeypoint)
  return target;
}

size_t SerializedKeypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeypoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float ptx = 1;
  if (this->ptx() != 0) {
    total_size += 1 + 4;
  }

  // float pty = 2;
  if (this->pty() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float octave = 4;
  if (this->octave() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedKeypoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedKeypoint)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedKeypoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedKeypoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedKeypoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedKeypoint)
    MergeFrom(*source);
  }
}

void SerializedKeypoint::MergeFrom(const SerializedKeypoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeypoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ptx() != 0) {
    set_ptx(from.ptx());
  }
  if (from.pty() != 0) {
    set_pty(from.pty());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.octave() != 0) {
    set_octave(from.octave());
  }
}

void SerializedKeypoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedKeypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedKeypoint::CopyFrom(const SerializedKeypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedKeypoint::IsInitialized() const {
  return true;
}

void SerializedKeypoint::Swap(SerializedKeypoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedKeypoint::InternalSwap(SerializedKeypoint* other) {
  using std::swap;
  swap(ptx_, other->ptx_);
  swap(pty_, other->pty_);
  swap(angle_, other->angle_);
  swap(octave_, other->octave_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedKeypoint::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedK::kFxFieldNumber;
const int SerializedK::kFyFieldNumber;
const int SerializedK::kCxFieldNumber;
const int SerializedK::kCyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedK::SerializedK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedK)
}
SerializedK::SerializedK(const SerializedK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fx_, &from.fx_,
    static_cast<size_t>(reinterpret_cast<char*>(&cy_) -
    reinterpret_cast<char*>(&fx_)) + sizeof(cy_));
  // @@protoc_insertion_point(copy_constructor:SerializedK)
}

void SerializedK::SharedCtor() {
  ::memset(&fx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cy_) -
      reinterpret_cast<char*>(&fx_)) + sizeof(cy_));
}

SerializedK::~SerializedK() {
  // @@protoc_insertion_point(destructor:SerializedK)
  SharedDtor();
}

void SerializedK::SharedDtor() {
}

void SerializedK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedK::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedK& SerializedK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedK.base);
  return *internal_default_instance();
}


void SerializedK::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cy_) -
      reinterpret_cast<char*>(&fx_)) + sizeof(cy_));
  _internal_metadata_.Clear();
}

bool SerializedK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float fx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedK)
  return false;
#undef DO_
}

void SerializedK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fx = 1;
  if (this->fx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fx(), output);
  }

  // float fy = 2;
  if (this->fy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fy(), output);
  }

  // float cx = 3;
  if (this->cx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cx(), output);
  }

  // float cy = 4;
  if (this->cy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->cy(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedK)
}

::google::protobuf::uint8* SerializedK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fx = 1;
  if (this->fx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fx(), target);
  }

  // float fy = 2;
  if (this->fy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fy(), target);
  }

  // float cx = 3;
  if (this->cx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cx(), target);
  }

  // float cy = 4;
  if (this->cy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->cy(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedK)
  return target;
}

size_t SerializedK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedK)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float fx = 1;
  if (this->fx() != 0) {
    total_size += 1 + 4;
  }

  // float fy = 2;
  if (this->fy() != 0) {
    total_size += 1 + 4;
  }

  // float cx = 3;
  if (this->cx() != 0) {
    total_size += 1 + 4;
  }

  // float cy = 4;
  if (this->cy() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedK)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedK)
    MergeFrom(*source);
  }
}

void SerializedK::MergeFrom(const SerializedK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fx() != 0) {
    set_fx(from.fx());
  }
  if (from.fy() != 0) {
    set_fy(from.fy());
  }
  if (from.cx() != 0) {
    set_cx(from.cx());
  }
  if (from.cy() != 0) {
    set_cy(from.cy());
  }
}

void SerializedK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedK::CopyFrom(const SerializedK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedK::IsInitialized() const {
  return true;
}

void SerializedK::Swap(SerializedK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedK::InternalSwap(SerializedK* other) {
  using std::swap;
  swap(fx_, other->fx_);
  swap(fy_, other->fy_);
  swap(cx_, other->cx_);
  swap(cy_, other->cy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedK::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedKArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedKArray::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedKArray::SerializedKArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedKArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedKArray)
}
SerializedKArray::SerializedKArray(const SerializedKArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SerializedKArray)
}

void SerializedKArray::SharedCtor() {
}

SerializedKArray::~SerializedKArray() {
  // @@protoc_insertion_point(destructor:SerializedKArray)
  SharedDtor();
}

void SerializedKArray::SharedDtor() {
}

void SerializedKArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedKArray::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedKArray& SerializedKArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedKArray.base);
  return *internal_default_instance();
}


void SerializedKArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedKArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedKArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SerializedK k = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedKArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedKArray)
  return false;
#undef DO_
}

void SerializedKArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedKArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedK k = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->k_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->k(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedKArray)
}

::google::protobuf::uint8* SerializedKArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedK k = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->k_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->k(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKArray)
  return target;
}

size_t SerializedKArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SerializedK k = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->k_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->k(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedKArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedKArray)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedKArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedKArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedKArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedKArray)
    MergeFrom(*source);
  }
}

void SerializedKArray::MergeFrom(const SerializedKArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedKArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  k_.MergeFrom(from.k_);
}

void SerializedKArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedKArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedKArray::CopyFrom(const SerializedKArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedKArray::IsInitialized() const {
  return true;
}

void SerializedKArray::Swap(SerializedKArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedKArray::InternalSwap(SerializedKArray* other) {
  using std::swap;
  CastToBase(&k_)->InternalSwap(CastToBase(&other->k_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedKArray::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedMappoint::InitAsDefaultInstance() {
  ::_SerializedMappoint_default_instance_._instance.get_mutable()->position_ = const_cast< ::SerializedPosition*>(
      ::SerializedPosition::internal_default_instance());
  ::_SerializedMappoint_default_instance_._instance.get_mutable()->briefdescriptor_ = const_cast< ::SerializedDescriptor*>(
      ::SerializedDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedMappoint::kIdFieldNumber;
const int SerializedMappoint::kPositionFieldNumber;
const int SerializedMappoint::kVisibleFieldNumber;
const int SerializedMappoint::kFoundFieldNumber;
const int SerializedMappoint::kBriefdescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedMappoint::SerializedMappoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedMappoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedMappoint)
}
SerializedMappoint::SerializedMappoint(const SerializedMappoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::SerializedPosition(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_briefdescriptor()) {
    briefdescriptor_ = new ::SerializedDescriptor(*from.briefdescriptor_);
  } else {
    briefdescriptor_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&found_) -
    reinterpret_cast<char*>(&id_)) + sizeof(found_));
  // @@protoc_insertion_point(copy_constructor:SerializedMappoint)
}

void SerializedMappoint::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&found_) -
      reinterpret_cast<char*>(&position_)) + sizeof(found_));
}

SerializedMappoint::~SerializedMappoint() {
  // @@protoc_insertion_point(destructor:SerializedMappoint)
  SharedDtor();
}

void SerializedMappoint::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete briefdescriptor_;
}

void SerializedMappoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedMappoint::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedMappoint& SerializedMappoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedMappoint.base);
  return *internal_default_instance();
}


void SerializedMappoint::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedMappoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && briefdescriptor_ != NULL) {
    delete briefdescriptor_;
  }
  briefdescriptor_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&found_) -
      reinterpret_cast<char*>(&id_)) + sizeof(found_));
  _internal_metadata_.Clear();
}

bool SerializedMappoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedMappoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SerializedPosition position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float visible = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float found = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &found_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SerializedDescriptor briefdescriptor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_briefdescriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedMappoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedMappoint)
  return false;
#undef DO_
}

void SerializedMappoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedMappoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .SerializedPosition position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // float visible = 3;
  if (this->visible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->visible(), output);
  }

  // float found = 4;
  if (this->found() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->found(), output);
  }

  // .SerializedDescriptor briefdescriptor = 5;
  if (this->has_briefdescriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_briefdescriptor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedMappoint)
}

::google::protobuf::uint8* SerializedMappoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedMappoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .SerializedPosition position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // float visible = 3;
  if (this->visible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->visible(), target);
  }

  // float found = 4;
  if (this->found() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->found(), target);
  }

  // .SerializedDescriptor briefdescriptor = 5;
  if (this->has_briefdescriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_briefdescriptor(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedMappoint)
  return target;
}

size_t SerializedMappoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedMappoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SerializedPosition position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .SerializedDescriptor briefdescriptor = 5;
  if (this->has_briefdescriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *briefdescriptor_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float visible = 3;
  if (this->visible() != 0) {
    total_size += 1 + 4;
  }

  // float found = 4;
  if (this->found() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedMappoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedMappoint)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedMappoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedMappoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedMappoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedMappoint)
    MergeFrom(*source);
  }
}

void SerializedMappoint::MergeFrom(const SerializedMappoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedMappoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::SerializedPosition::MergeFrom(from.position());
  }
  if (from.has_briefdescriptor()) {
    mutable_briefdescriptor()->::SerializedDescriptor::MergeFrom(from.briefdescriptor());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.visible() != 0) {
    set_visible(from.visible());
  }
  if (from.found() != 0) {
    set_found(from.found());
  }
}

void SerializedMappoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedMappoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedMappoint::CopyFrom(const SerializedMappoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedMappoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedMappoint::IsInitialized() const {
  return true;
}

void SerializedMappoint::Swap(SerializedMappoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedMappoint::InternalSwap(SerializedMappoint* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(briefdescriptor_, other->briefdescriptor_);
  swap(id_, other->id_);
  swap(visible_, other->visible_);
  swap(found_, other->found_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedMappoint::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedMappointArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedMappointArray::kMappointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedMappointArray::SerializedMappointArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedMappointArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedMappointArray)
}
SerializedMappointArray::SerializedMappointArray(const SerializedMappointArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mappoint_(from.mappoint_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SerializedMappointArray)
}

void SerializedMappointArray::SharedCtor() {
}

SerializedMappointArray::~SerializedMappointArray() {
  // @@protoc_insertion_point(destructor:SerializedMappointArray)
  SharedDtor();
}

void SerializedMappointArray::SharedDtor() {
}

void SerializedMappointArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedMappointArray::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedMappointArray& SerializedMappointArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedMappointArray.base);
  return *internal_default_instance();
}


void SerializedMappointArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedMappointArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mappoint_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedMappointArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedMappointArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SerializedMappoint mappoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mappoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedMappointArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedMappointArray)
  return false;
#undef DO_
}

void SerializedMappointArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedMappointArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedMappoint mappoint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mappoint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mappoint(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedMappointArray)
}

::google::protobuf::uint8* SerializedMappointArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedMappointArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedMappoint mappoint = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mappoint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mappoint(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedMappointArray)
  return target;
}

size_t SerializedMappointArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedMappointArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SerializedMappoint mappoint = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mappoint_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mappoint(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedMappointArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedMappointArray)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedMappointArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedMappointArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedMappointArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedMappointArray)
    MergeFrom(*source);
  }
}

void SerializedMappointArray::MergeFrom(const SerializedMappointArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedMappointArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mappoint_.MergeFrom(from.mappoint_);
}

void SerializedMappointArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedMappointArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedMappointArray::CopyFrom(const SerializedMappointArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedMappointArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedMappointArray::IsInitialized() const {
  return true;
}

void SerializedMappointArray::Swap(SerializedMappointArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedMappointArray::InternalSwap(SerializedMappointArray* other) {
  using std::swap;
  CastToBase(&mappoint_)->InternalSwap(CastToBase(&other->mappoint_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedMappointArray::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedKeyframe::InitAsDefaultInstance() {
  ::_SerializedKeyframe_default_instance_._instance.get_mutable()->pose_ = const_cast< ::SerializedPose*>(
      ::SerializedPose::internal_default_instance());
  ::_SerializedKeyframe_default_instance_._instance.get_mutable()->kmatrix_ = const_cast< ::SerializedK*>(
      ::SerializedK::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedKeyframe::kIdFieldNumber;
const int SerializedKeyframe::kPoseFieldNumber;
const int SerializedKeyframe::kKmatrixFieldNumber;
const int SerializedKeyframe::kKindexFieldNumber;
const int SerializedKeyframe::kLoopedgesidsFieldNumber;
const int SerializedKeyframe::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedKeyframe::SerializedKeyframe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedKeyframe.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedKeyframe)
}
SerializedKeyframe::SerializedKeyframe(const SerializedKeyframe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      loopedgesids_(from.loopedgesids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose()) {
    pose_ = new ::SerializedPose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_kmatrix()) {
    kmatrix_ = new ::SerializedK(*from.kmatrix_);
  } else {
    kmatrix_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&id_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:SerializedKeyframe)
}

void SerializedKeyframe::SharedCtor() {
  ::memset(&pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&pose_)) + sizeof(timestamp_));
}

SerializedKeyframe::~SerializedKeyframe() {
  // @@protoc_insertion_point(destructor:SerializedKeyframe)
  SharedDtor();
}

void SerializedKeyframe::SharedDtor() {
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete kmatrix_;
}

void SerializedKeyframe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedKeyframe::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedKeyframe& SerializedKeyframe::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedKeyframe.base);
  return *internal_default_instance();
}


void SerializedKeyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loopedgesids_.Clear();
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && kmatrix_ != NULL) {
    delete kmatrix_;
  }
  kmatrix_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool SerializedKeyframe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedKeyframe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SerializedPose pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SerializedK kmatrix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kmatrix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 kindex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 loopedgesids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_loopedgesids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_loopedgesids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedKeyframe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedKeyframe)
  return false;
#undef DO_
}

void SerializedKeyframe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedKeyframe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .SerializedPose pose = 2;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pose(), output);
  }

  // .SerializedK kmatrix = 3;
  if (this->has_kmatrix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_kmatrix(), output);
  }

  // uint32 kindex = 4;
  if (this->kindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->kindex(), output);
  }

  // repeated uint32 loopedgesids = 5;
  if (this->loopedgesids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _loopedgesids_cached_byte_size_));
  }
  for (int i = 0, n = this->loopedgesids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->loopedgesids(i), output);
  }

  // double timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedKeyframe)
}

::google::protobuf::uint8* SerializedKeyframe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .SerializedPose pose = 2;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pose(), deterministic, target);
  }

  // .SerializedK kmatrix = 3;
  if (this->has_kmatrix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_kmatrix(), deterministic, target);
  }

  // uint32 kindex = 4;
  if (this->kindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->kindex(), target);
  }

  // repeated uint32 loopedgesids = 5;
  if (this->loopedgesids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _loopedgesids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->loopedgesids_, target);
  }

  // double timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframe)
  return target;
}

size_t SerializedKeyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframe)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 loopedgesids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->loopedgesids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _loopedgesids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .SerializedPose pose = 2;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .SerializedK kmatrix = 3;
  if (this->has_kmatrix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kmatrix_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 kindex = 4;
  if (this->kindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kindex());
  }

  // double timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedKeyframe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedKeyframe)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedKeyframe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedKeyframe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedKeyframe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedKeyframe)
    MergeFrom(*source);
  }
}

void SerializedKeyframe::MergeFrom(const SerializedKeyframe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loopedgesids_.MergeFrom(from.loopedgesids_);
  if (from.has_pose()) {
    mutable_pose()->::SerializedPose::MergeFrom(from.pose());
  }
  if (from.has_kmatrix()) {
    mutable_kmatrix()->::SerializedK::MergeFrom(from.kmatrix());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.kindex() != 0) {
    set_kindex(from.kindex());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void SerializedKeyframe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedKeyframe::CopyFrom(const SerializedKeyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedKeyframe::IsInitialized() const {
  return true;
}

void SerializedKeyframe::Swap(SerializedKeyframe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedKeyframe::InternalSwap(SerializedKeyframe* other) {
  using std::swap;
  loopedgesids_.InternalSwap(&other->loopedgesids_);
  swap(pose_, other->pose_);
  swap(kmatrix_, other->kmatrix_);
  swap(id_, other->id_);
  swap(kindex_, other->kindex_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedKeyframe::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedKeyframeArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedKeyframeArray::kKeyframeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedKeyframeArray::SerializedKeyframeArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedKeyframeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedKeyframeArray)
}
SerializedKeyframeArray::SerializedKeyframeArray(const SerializedKeyframeArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keyframe_(from.keyframe_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SerializedKeyframeArray)
}

void SerializedKeyframeArray::SharedCtor() {
}

SerializedKeyframeArray::~SerializedKeyframeArray() {
  // @@protoc_insertion_point(destructor:SerializedKeyframeArray)
  SharedDtor();
}

void SerializedKeyframeArray::SharedDtor() {
}

void SerializedKeyframeArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedKeyframeArray::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedKeyframeArray& SerializedKeyframeArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedKeyframeArray.base);
  return *internal_default_instance();
}


void SerializedKeyframeArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframeArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedKeyframeArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedKeyframeArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SerializedKeyframe keyframe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keyframe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedKeyframeArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedKeyframeArray)
  return false;
#undef DO_
}

void SerializedKeyframeArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedKeyframeArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedKeyframe keyframe = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyframe_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keyframe(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedKeyframeArray)
}

::google::protobuf::uint8* SerializedKeyframeArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframeArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedKeyframe keyframe = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyframe_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keyframe(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframeArray)
  return target;
}

size_t SerializedKeyframeArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframeArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SerializedKeyframe keyframe = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keyframe_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keyframe(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedKeyframeArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedKeyframeArray)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedKeyframeArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedKeyframeArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedKeyframeArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedKeyframeArray)
    MergeFrom(*source);
  }
}

void SerializedKeyframeArray::MergeFrom(const SerializedKeyframeArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframeArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keyframe_.MergeFrom(from.keyframe_);
}

void SerializedKeyframeArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedKeyframeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedKeyframeArray::CopyFrom(const SerializedKeyframeArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedKeyframeArray::IsInitialized() const {
  return true;
}

void SerializedKeyframeArray::Swap(SerializedKeyframeArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedKeyframeArray::InternalSwap(SerializedKeyframeArray* other) {
  using std::swap;
  CastToBase(&keyframe_)->InternalSwap(CastToBase(&other->keyframe_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedKeyframeArray::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedFeature::InitAsDefaultInstance() {
  ::_SerializedFeature_default_instance_._instance.get_mutable()->keypoint_ = const_cast< ::SerializedKeypoint*>(
      ::SerializedKeypoint::internal_default_instance());
  ::_SerializedFeature_default_instance_._instance.get_mutable()->briefdescriptor_ = const_cast< ::SerializedDescriptor*>(
      ::SerializedDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedFeature::kMappointIdFieldNumber;
const int SerializedFeature::kKeypointFieldNumber;
const int SerializedFeature::kBriefdescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedFeature::SerializedFeature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedFeature.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedFeature)
}
SerializedFeature::SerializedFeature(const SerializedFeature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_keypoint()) {
    keypoint_ = new ::SerializedKeypoint(*from.keypoint_);
  } else {
    keypoint_ = NULL;
  }
  if (from.has_briefdescriptor()) {
    briefdescriptor_ = new ::SerializedDescriptor(*from.briefdescriptor_);
  } else {
    briefdescriptor_ = NULL;
  }
  mappoint_id_ = from.mappoint_id_;
  // @@protoc_insertion_point(copy_constructor:SerializedFeature)
}

void SerializedFeature::SharedCtor() {
  ::memset(&keypoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mappoint_id_) -
      reinterpret_cast<char*>(&keypoint_)) + sizeof(mappoint_id_));
}

SerializedFeature::~SerializedFeature() {
  // @@protoc_insertion_point(destructor:SerializedFeature)
  SharedDtor();
}

void SerializedFeature::SharedDtor() {
  if (this != internal_default_instance()) delete keypoint_;
  if (this != internal_default_instance()) delete briefdescriptor_;
}

void SerializedFeature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedFeature::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedFeature& SerializedFeature::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedFeature.base);
  return *internal_default_instance();
}


void SerializedFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && keypoint_ != NULL) {
    delete keypoint_;
  }
  keypoint_ = NULL;
  if (GetArenaNoVirtual() == NULL && briefdescriptor_ != NULL) {
    delete briefdescriptor_;
  }
  briefdescriptor_ = NULL;
  mappoint_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SerializedFeature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedFeature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mappoint_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mappoint_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SerializedKeypoint keypoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_keypoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SerializedDescriptor briefdescriptor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_briefdescriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedFeature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedFeature)
  return false;
#undef DO_
}

void SerializedFeature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mappoint_id = 2;
  if (this->mappoint_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mappoint_id(), output);
  }

  // .SerializedKeypoint keypoint = 3;
  if (this->has_keypoint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_keypoint(), output);
  }

  // .SerializedDescriptor briefdescriptor = 4;
  if (this->has_briefdescriptor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_briefdescriptor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedFeature)
}

::google::protobuf::uint8* SerializedFeature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedFeature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mappoint_id = 2;
  if (this->mappoint_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mappoint_id(), target);
  }

  // .SerializedKeypoint keypoint = 3;
  if (this->has_keypoint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_keypoint(), deterministic, target);
  }

  // .SerializedDescriptor briefdescriptor = 4;
  if (this->has_briefdescriptor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_briefdescriptor(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedFeature)
  return target;
}

size_t SerializedFeature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedFeature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .SerializedKeypoint keypoint = 3;
  if (this->has_keypoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *keypoint_);
  }

  // .SerializedDescriptor briefdescriptor = 4;
  if (this->has_briefdescriptor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *briefdescriptor_);
  }

  // uint32 mappoint_id = 2;
  if (this->mappoint_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mappoint_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedFeature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedFeature)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedFeature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedFeature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedFeature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedFeature)
    MergeFrom(*source);
  }
}

void SerializedFeature::MergeFrom(const SerializedFeature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedFeature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_keypoint()) {
    mutable_keypoint()->::SerializedKeypoint::MergeFrom(from.keypoint());
  }
  if (from.has_briefdescriptor()) {
    mutable_briefdescriptor()->::SerializedDescriptor::MergeFrom(from.briefdescriptor());
  }
  if (from.mappoint_id() != 0) {
    set_mappoint_id(from.mappoint_id());
  }
}

void SerializedFeature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedFeature::CopyFrom(const SerializedFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedFeature::IsInitialized() const {
  return true;
}

void SerializedFeature::Swap(SerializedFeature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedFeature::InternalSwap(SerializedFeature* other) {
  using std::swap;
  swap(keypoint_, other->keypoint_);
  swap(briefdescriptor_, other->briefdescriptor_);
  swap(mappoint_id_, other->mappoint_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedFeature::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedKeyframeFeatures::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedKeyframeFeatures::kKeyframeIdFieldNumber;
const int SerializedKeyframeFeatures::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedKeyframeFeatures::SerializedKeyframeFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedKeyframeFeatures.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedKeyframeFeatures)
}
SerializedKeyframeFeatures::SerializedKeyframeFeatures(const SerializedKeyframeFeatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      feature_(from.feature_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keyframe_id_ = from.keyframe_id_;
  // @@protoc_insertion_point(copy_constructor:SerializedKeyframeFeatures)
}

void SerializedKeyframeFeatures::SharedCtor() {
  keyframe_id_ = 0u;
}

SerializedKeyframeFeatures::~SerializedKeyframeFeatures() {
  // @@protoc_insertion_point(destructor:SerializedKeyframeFeatures)
  SharedDtor();
}

void SerializedKeyframeFeatures::SharedDtor() {
}

void SerializedKeyframeFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedKeyframeFeatures::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedKeyframeFeatures& SerializedKeyframeFeatures::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedKeyframeFeatures.base);
  return *internal_default_instance();
}


void SerializedKeyframeFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframeFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feature_.Clear();
  keyframe_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SerializedKeyframeFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedKeyframeFeatures)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 keyframe_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keyframe_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SerializedFeature feature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedKeyframeFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedKeyframeFeatures)
  return false;
#undef DO_
}

void SerializedKeyframeFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedKeyframeFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 keyframe_id = 1;
  if (this->keyframe_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->keyframe_id(), output);
  }

  // repeated .SerializedFeature feature = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->feature(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedKeyframeFeatures)
}

::google::protobuf::uint8* SerializedKeyframeFeatures::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframeFeatures)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 keyframe_id = 1;
  if (this->keyframe_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->keyframe_id(), target);
  }

  // repeated .SerializedFeature feature = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->feature(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframeFeatures)
  return target;
}

size_t SerializedKeyframeFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframeFeatures)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SerializedFeature feature = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feature(static_cast<int>(i)));
    }
  }

  // uint32 keyframe_id = 1;
  if (this->keyframe_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->keyframe_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedKeyframeFeatures::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedKeyframeFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedKeyframeFeatures* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedKeyframeFeatures>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedKeyframeFeatures)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedKeyframeFeatures)
    MergeFrom(*source);
  }
}

void SerializedKeyframeFeatures::MergeFrom(const SerializedKeyframeFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframeFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feature_.MergeFrom(from.feature_);
  if (from.keyframe_id() != 0) {
    set_keyframe_id(from.keyframe_id());
  }
}

void SerializedKeyframeFeatures::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedKeyframeFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedKeyframeFeatures::CopyFrom(const SerializedKeyframeFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframeFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedKeyframeFeatures::IsInitialized() const {
  return true;
}

void SerializedKeyframeFeatures::Swap(SerializedKeyframeFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedKeyframeFeatures::InternalSwap(SerializedKeyframeFeatures* other) {
  using std::swap;
  CastToBase(&feature_)->InternalSwap(CastToBase(&other->feature_));
  swap(keyframe_id_, other->keyframe_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedKeyframeFeatures::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SerializedKeyframeFeaturesArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SerializedKeyframeFeaturesArray::kFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SerializedKeyframeFeaturesArray::SerializedKeyframeFeaturesArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_osmap_2eproto::scc_info_SerializedKeyframeFeaturesArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SerializedKeyframeFeaturesArray)
}
SerializedKeyframeFeaturesArray::SerializedKeyframeFeaturesArray(const SerializedKeyframeFeaturesArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      feature_(from.feature_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SerializedKeyframeFeaturesArray)
}

void SerializedKeyframeFeaturesArray::SharedCtor() {
}

SerializedKeyframeFeaturesArray::~SerializedKeyframeFeaturesArray() {
  // @@protoc_insertion_point(destructor:SerializedKeyframeFeaturesArray)
  SharedDtor();
}

void SerializedKeyframeFeaturesArray::SharedDtor() {
}

void SerializedKeyframeFeaturesArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SerializedKeyframeFeaturesArray::descriptor() {
  ::protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SerializedKeyframeFeaturesArray& SerializedKeyframeFeaturesArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_osmap_2eproto::scc_info_SerializedKeyframeFeaturesArray.base);
  return *internal_default_instance();
}


void SerializedKeyframeFeaturesArray::Clear() {
// @@protoc_insertion_point(message_clear_start:SerializedKeyframeFeaturesArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feature_.Clear();
  _internal_metadata_.Clear();
}

bool SerializedKeyframeFeaturesArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SerializedKeyframeFeaturesArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SerializedKeyframeFeatures feature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_feature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SerializedKeyframeFeaturesArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SerializedKeyframeFeaturesArray)
  return false;
#undef DO_
}

void SerializedKeyframeFeaturesArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SerializedKeyframeFeaturesArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedKeyframeFeatures feature = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->feature(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SerializedKeyframeFeaturesArray)
}

::google::protobuf::uint8* SerializedKeyframeFeaturesArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SerializedKeyframeFeaturesArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SerializedKeyframeFeatures feature = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->feature_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->feature(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SerializedKeyframeFeaturesArray)
  return target;
}

size_t SerializedKeyframeFeaturesArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SerializedKeyframeFeaturesArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .SerializedKeyframeFeatures feature = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->feature_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->feature(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SerializedKeyframeFeaturesArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SerializedKeyframeFeaturesArray)
  GOOGLE_DCHECK_NE(&from, this);
  const SerializedKeyframeFeaturesArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SerializedKeyframeFeaturesArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SerializedKeyframeFeaturesArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SerializedKeyframeFeaturesArray)
    MergeFrom(*source);
  }
}

void SerializedKeyframeFeaturesArray::MergeFrom(const SerializedKeyframeFeaturesArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SerializedKeyframeFeaturesArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feature_.MergeFrom(from.feature_);
}

void SerializedKeyframeFeaturesArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SerializedKeyframeFeaturesArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SerializedKeyframeFeaturesArray::CopyFrom(const SerializedKeyframeFeaturesArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SerializedKeyframeFeaturesArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SerializedKeyframeFeaturesArray::IsInitialized() const {
  return true;
}

void SerializedKeyframeFeaturesArray::Swap(SerializedKeyframeFeaturesArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SerializedKeyframeFeaturesArray::InternalSwap(SerializedKeyframeFeaturesArray* other) {
  using std::swap;
  CastToBase(&feature_)->InternalSwap(CastToBase(&other->feature_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SerializedKeyframeFeaturesArray::GetMetadata() const {
  protobuf_osmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_osmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedDescriptor* Arena::CreateMaybeMessage< ::SerializedDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedDescriptor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedPose* Arena::CreateMaybeMessage< ::SerializedPose >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedPose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedPosition* Arena::CreateMaybeMessage< ::SerializedPosition >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedPosition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedKeypoint* Arena::CreateMaybeMessage< ::SerializedKeypoint >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedKeypoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedK* Arena::CreateMaybeMessage< ::SerializedK >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedKArray* Arena::CreateMaybeMessage< ::SerializedKArray >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedKArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedMappoint* Arena::CreateMaybeMessage< ::SerializedMappoint >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedMappoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedMappointArray* Arena::CreateMaybeMessage< ::SerializedMappointArray >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedMappointArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedKeyframe* Arena::CreateMaybeMessage< ::SerializedKeyframe >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedKeyframe >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedKeyframeArray* Arena::CreateMaybeMessage< ::SerializedKeyframeArray >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedKeyframeArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedFeature* Arena::CreateMaybeMessage< ::SerializedFeature >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedFeature >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedKeyframeFeatures* Arena::CreateMaybeMessage< ::SerializedKeyframeFeatures >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedKeyframeFeatures >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SerializedKeyframeFeaturesArray* Arena::CreateMaybeMessage< ::SerializedKeyframeFeaturesArray >(Arena* arena) {
  return Arena::CreateInternal< ::SerializedKeyframeFeaturesArray >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
